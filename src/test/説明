## １：次の内容に沿ったJAVAのプログラムを作成してください。

① `int`型の変数`isHungry`を定義し、`0`か`1`を代入する（どちらを代入しても構わない）。

　**ここで0は空腹、1はお腹がいっぱいであるとします**。

次に`String`型の変数`food`を定義し、適当な食べものの名前を代入する。

② 画面に「こんにちは」と表示する。

**日本語が文字化けする場合は、「Hello」としてください**

③ もし変数`isHungry`が１であれば「お腹がいっぱいです」、そうでなければ「はらペこです」と表示する。

**日本語が文字化けする場合は、お腹がいっぱいは「I'm full」,はらぺこは「I'm hungry」としてください**

④ もし変数`isHungry`が**空腹**を示すならば、変数`food`を利用して「〇〇をいただきます」と表示する（〇〇には食べものの名前が入る）。

**日本語が文字化けする場合は、"I will have 〇〇”としてください**

⑤ 最後に「ごちそうさまでした」と表示する。

**日本語が文字化けする場合は、Thank you for the mealとしてください**

空腹の場合の実行結果
こんにちは
はらべこです
ハンバーグをいただきます
ごちそうさまでした


お腹がいっぱいの時の実行結果
こんにちは
お腹がいっぱいです
ごちそうさまでした

## ２：以下の仕様を参考にメソッド「calcTriangleArea」と「calcCircleArea」を作成してください。

| メソッド名 | calcTriangleArea |
| --- | --- |
| 戻り値 | 三角形の面積（小数） |
| 引数リスト | base：三角形の底辺の長さ（小数）、height：三角形の高さ（小数） |
| 处理内容 | 引数を使用して面積を求め、 それを戻す。 |

| メソッド名 | calcCircleArea |
| --- | --- |
| 戻り値 | 円の面積（小数） |
| 引数リスト | radius：円の半径（小数） |
| 处理内容 | 引数を使用して面積を求め､ それを戻す。（π は 3.14 として構わない） |

メインメソッドからそれぞれのメソッドに適当な引数を渡して呼び出し、戻り値として正しい面積が表示されるかを確認してください。

例）実行結果の例

calcTriangleArea →base 10.0 height5.0
calcCircleArea⇒radius 5.0

```
・25.0 ←calcTriangleAreaの実行結果
・78.5　←calcCircleAreaの実行結果
```

**コンソール画面には、以下のように数字のみ出力されていれば良い**

25.0 
78.5

## 3：次の問題を解決できるメソッド「deleteElement」を作成してください。

引数には、整数の配列`nums`と整数`val`があって、`nums`の中のすべての`val`を削除したい。

ただし、新しい配列を作らないでください。`nums`の要素を直接に変更してください。

戻り値は、`val`を削除した後、配列にあるべき要素の数。実際の配列のその数の後の数字は考えなくていい。


		int[] nums = { 0, 1, 2, 2, 3, 0, 4, 2 };
		int val = 2;
		
　　実行結果として　
    5 ←削除しなかった要素の数を出力
    0
    1
    3
    0
    4
    0
    4
    2