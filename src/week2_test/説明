## １：次の内容に沿ったJAVAのプログラムを作成してください。

問題: インターフェースと継承を使用した図形の情報表示

次の要件に基づいて、図形の情報を表示するためのソースコードを書いてください。

1. **`Printx`**という名前のインターフェースを作成します。このインターフェースには、**`printx`**というメソッドがあります。
    - **`printx`**メソッドは、図形の情報を表示するために使用されます。
2. **`Rectangle`**という名前のクラスを作成します。このクラスは、**`Printx`**インターフェースを実装します。
    - **`Rectangle`**クラスには、**`height`**（高さ）と**`width`**（幅）という2つの保護された（protected）インスタンス変数があります。
    - **`Rectangle`**クラスには、**`height`**と**`width`**を引数として受け取るコンストラクタがあります。
    - **`Rectangle`**クラスには、以下のメソッドがあります：
        - **`getArea`**メソッド: 面積を計算して返します（**`height * width`**）。
        - **`getPerimeter`**メソッド: 周長を計算して返します（**`(height + width) * 2`**）。
        - **`printx`**メソッド（インターフェースの実装）: "長方形の高さ："、高さの値、"、幅："、幅の値、"、面積："、面積の値、"、周長："、周長の値の形式で情報を表示します。
3. **`Square`**という名前のクラスを作成します。このクラスは、**`Rectangle`**クラスを継承します。
    - **`Square`**クラスには、**`side`**（辺の長さ）という1つの引数を受け取るコンストラクタがあります。
    - **`Square`**クラスには、**`printx`**メソッド（オーバーライド）があります： "正方形の辺の長さ："、幅の値、"、面積："、面積の値、"、周長："、周長の値の形式で情報を表示します。

以上の要件に基づいて、Javaソースコードを作成してください。

提供コード

```java
public class Main {

	public static void main(String[] args) {
		
		//長方形の各辺の長さの出力
		Rectangle squarelength = new Rectangle(10.0,20.0);
		squarelength.printx();
		
		//正方形の各辺の長さの出力
		Square squereResult = new Square(10.0);
		squereResult.printx();
	}

}
```

実行結果

```java
長方形の高さ：10.0、幅：20.0、面積：200.0、周長：60.0
正方形の辺の長さ：10.0、面積：100.0、周長：40.0
```

## ２：曜日を表示する列挙型（enum）Week を作成してください。

以下の要件に基づいて、列挙型を使用して曜日の日本語名を表示するためのソースコードを書いてください。

1. **`Week`**という名前の列挙型を作成します。
    - 列挙子（enum constant）は、**`MON`**（月曜日）、**`TUE`**（火曜日）、**`WED`**（水曜日）、**`THR`**（木曜日）、**`FRI`**（金曜日）、**`SAT`**（土曜日）、**`SUN`**（日曜日）の7つです。
    - **`Week`**列挙型の各列挙子には、日本語名を表す**`japaneseName`**というインスタンス変数があります。
    - **`Week`**列挙型には、**`japaneseName`**を引数として受け取るプライベートなコンストラクタがあります。
    - **`Week`**列挙型には、**`getJapaneseName`**メソッドがあります。このメソッドは、**`japaneseName`**の値を返します。

　２．Mainクラスを作成し、以下の実行結果となるようにソースを書いて下さい。

以上の要件に基づいて、Javaの列挙型を使用したソースコードを作成してください。

実行結果

```java
MONの和名は月曜日
```


## 3：次の要件に沿った Java プログラムを作成してください。

問題: シングルトンパターンを使用したTeacherクラスの拡張

以下の要件に基づいて、シングルトンパターンを使用してTeacherクラスを拡張し、インスタンスの取得や情報の設定・取得が可能なソースコードを書いてください。

1. **`Teacher`**という名前のクラスを作成します。
    - **`Teacher`**クラスには、**`private`**なインスタンス変数**`name`**（名前）と**`subject`**（科目）があります。
    - **`Teacher`**クラスには、**`private`**な静的変数**`teacher`**があります。これはTeacherクラスの唯一のインスタンスを保持します。
    - **`Teacher`**クラスには、**`private`**なデフォルトコンストラクタがあります。このコンストラクタ内で、**`name`**を"Alice"、**`subject`**を"Japanese"という初期値で設定します。
    - **`Teacher`**クラスには、**`teach`**という名前の公開メソッドがあります。このメソッドは、"Hello"と出力します。
    - **`Teacher`**クラスには、以下のアクセサ（getter/setter）メソッドがあります：
        - **`getName`**メソッド: **`name`**の値を返します。
        - **`setName`**メソッド: **`name`**の値を設定します。
        - **`getSubject`**メソッド: **`subject`**の値を返します。
        - **`setSubject`**メソッド: **`subject`**の値を設定します。
        - **`getTeacher`**メソッド: Teacherクラスの唯一のインスタンスである**`teacher`**を返します。
        - **`setTeacher`**メソッド: Teacherクラスの唯一のインスタンス**`teacher`**を設定します。
    
    ２：Mainクラスを作成して、以下の実行結果となるようにソースを書いて下さい。
    

実行結果

```java
name :Alice
subject :Japanese
Hello
```